// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: proto/signaling.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Media to be used to for the peer connection
type Media int32

const (
	Media_DATA  Media = 0
	Media_VIDEO Media = 1
	Media_AUDIO Media = 2
	Media_MIXED Media = 3
)

// Enum value maps for Media.
var (
	Media_name = map[int32]string{
		0: "DATA",
		1: "VIDEO",
		2: "AUDIO",
		3: "MIXED",
	}
	Media_value = map[string]int32{
		"DATA":  0,
		"VIDEO": 1,
		"AUDIO": 2,
		"MIXED": 3,
	}
)

func (x Media) Enum() *Media {
	p := new(Media)
	*p = x
	return p
}

func (x Media) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Media) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_signaling_proto_enumTypes[0].Descriptor()
}

func (Media) Type() protoreflect.EnumType {
	return &file_proto_signaling_proto_enumTypes[0]
}

func (x Media) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Media.Descriptor instead.
func (Media) EnumDescriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{0}
}

type Error_ErrorStatus int32

const (
	Error_UNKNOWN Error_ErrorStatus = 0
	Error_FAILED  Error_ErrorStatus = 1
)

// Enum value maps for Error_ErrorStatus.
var (
	Error_ErrorStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "FAILED",
	}
	Error_ErrorStatus_value = map[string]int32{
		"UNKNOWN": 0,
		"FAILED":  1,
	}
)

func (x Error_ErrorStatus) Enum() *Error_ErrorStatus {
	p := new(Error_ErrorStatus)
	*p = x
	return p
}

func (x Error_ErrorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error_ErrorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_signaling_proto_enumTypes[1].Descriptor()
}

func (Error_ErrorStatus) Type() protoreflect.EnumType {
	return &file_proto_signaling_proto_enumTypes[1]
}

func (x Error_ErrorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error_ErrorStatus.Descriptor instead.
func (Error_ErrorStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{8, 0}
}

// Sdp represents the connection string and type of peer connection.
type Sdp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sdp  string `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Sdp) Reset() {
	*x = Sdp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sdp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sdp) ProtoMessage() {}

func (x *Sdp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sdp.ProtoReflect.Descriptor instead.
func (*Sdp) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{0}
}

func (x *Sdp) GetSdp() string {
	if x != nil {
		return x.Sdp
	}
	return ""
}

func (x *Sdp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Meta information for a WebRTC offer and answer.
type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session string `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	To      string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	From    string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{1}
}

func (x *Meta) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *Meta) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Meta) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

// Greeting is representing a new possible peer.
type Greeting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Id      string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Details map[string]string `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Greeting) Reset() {
	*x = Greeting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Greeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Greeting) ProtoMessage() {}

func (x *Greeting) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Greeting.ProtoReflect.Descriptor instead.
func (*Greeting) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{2}
}

func (x *Greeting) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Greeting) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Greeting) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// This represents a WebRTC offer for another peer.
type Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Meta  *Meta  `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	Sdp   *Sdp   `protobuf:"bytes,3,opt,name=sdp,proto3" json:"sdp,omitempty"`
	Media Media  `protobuf:"varint,4,opt,name=media,proto3,enum=proto.Media" json:"media,omitempty"`
}

func (x *Offer) Reset() {
	*x = Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{3}
}

func (x *Offer) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Offer) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Offer) GetSdp() *Sdp {
	if x != nil {
		return x.Sdp
	}
	return nil
}

func (x *Offer) GetMedia() Media {
	if x != nil {
		return x.Media
	}
	return Media_DATA
}

// This represents a WebRTC answer for another peer.
type Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Meta  *Meta  `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	Sdp   *Sdp   `protobuf:"bytes,3,opt,name=sdp,proto3" json:"sdp,omitempty"`
	Media Media  `protobuf:"varint,4,opt,name=media,proto3,enum=proto.Media" json:"media,omitempty"`
}

func (x *Answer) Reset() {
	*x = Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{4}
}

func (x *Answer) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Answer) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Answer) GetSdp() *Sdp {
	if x != nil {
		return x.Sdp
	}
	return nil
}

func (x *Answer) GetMedia() Media {
	if x != nil {
		return x.Media
	}
	return Media_DATA
}

// Represents an ICE candidate to be exchanged between peers.
type Candidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string          `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Meta *Meta           `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	Info *Candidate_Info `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Candidate) Reset() {
	*x = Candidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candidate) ProtoMessage() {}

func (x *Candidate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candidate.ProtoReflect.Descriptor instead.
func (*Candidate) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{5}
}

func (x *Candidate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Candidate) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Candidate) GetInfo() *Candidate_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

// Leave is announcing to leave a session
type Leave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Meta *Meta  `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Leave) Reset() {
	*x = Leave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leave) ProtoMessage() {}

func (x *Leave) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leave.ProtoReflect.Descriptor instead.
func (*Leave) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{6}
}

func (x *Leave) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Leave) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

// Signal is the information that can be exchanged between peers.
type Signal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Signal:
	//	*Signal_Offer
	//	*Signal_Answer
	//	*Signal_Leave
	//	*Signal_Candidate
	//	*Signal_Error
	Signal isSignal_Signal `protobuf_oneof:"signal"`
}

func (x *Signal) Reset() {
	*x = Signal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{7}
}

func (m *Signal) GetSignal() isSignal_Signal {
	if m != nil {
		return m.Signal
	}
	return nil
}

func (x *Signal) GetOffer() *Offer {
	if x, ok := x.GetSignal().(*Signal_Offer); ok {
		return x.Offer
	}
	return nil
}

func (x *Signal) GetAnswer() *Answer {
	if x, ok := x.GetSignal().(*Signal_Answer); ok {
		return x.Answer
	}
	return nil
}

func (x *Signal) GetLeave() *Leave {
	if x, ok := x.GetSignal().(*Signal_Leave); ok {
		return x.Leave
	}
	return nil
}

func (x *Signal) GetCandidate() *Candidate {
	if x, ok := x.GetSignal().(*Signal_Candidate); ok {
		return x.Candidate
	}
	return nil
}

func (x *Signal) GetError() *Error {
	if x, ok := x.GetSignal().(*Signal_Error); ok {
		return x.Error
	}
	return nil
}

type isSignal_Signal interface {
	isSignal_Signal()
}

type Signal_Offer struct {
	Offer *Offer `protobuf:"bytes,1,opt,name=offer,proto3,oneof"`
}

type Signal_Answer struct {
	Answer *Answer `protobuf:"bytes,2,opt,name=answer,proto3,oneof"`
}

type Signal_Leave struct {
	Leave *Leave `protobuf:"bytes,3,opt,name=leave,proto3,oneof"`
}

type Signal_Candidate struct {
	Candidate *Candidate `protobuf:"bytes,4,opt,name=candidate,proto3,oneof"`
}

type Signal_Error struct {
	Error *Error `protobuf:"bytes,10,opt,name=error,proto3,oneof"`
}

func (*Signal_Offer) isSignal_Signal() {}

func (*Signal_Answer) isSignal_Signal() {}

func (*Signal_Leave) isSignal_Signal() {}

func (*Signal_Candidate) isSignal_Signal() {}

func (*Signal_Error) isSignal_Signal() {}

// Error that can occur on the underlying connections.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      Error_ErrorStatus `protobuf:"varint,1,opt,name=status,proto3,enum=proto.Error_ErrorStatus" json:"status,omitempty"`
	Description string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{8}
}

func (x *Error) GetStatus() Error_ErrorStatus {
	if x != nil {
		return x.Status
	}
	return Error_UNKNOWN
}

func (x *Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Empty ...
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{9}
}

type Candidate_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdpMLineIndex int32  `protobuf:"varint,1,opt,name=sdp_m_line_index,json=sdpMLineIndex,proto3" json:"sdp_m_line_index,omitempty"`
	SdpMid        string `protobuf:"bytes,2,opt,name=sdp_mid,json=sdpMid,proto3" json:"sdp_mid,omitempty"`
	Canidate      string `protobuf:"bytes,3,opt,name=canidate,proto3" json:"canidate,omitempty"`
}

func (x *Candidate_Info) Reset() {
	*x = Candidate_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_signaling_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candidate_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candidate_Info) ProtoMessage() {}

func (x *Candidate_Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_signaling_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candidate_Info.ProtoReflect.Descriptor instead.
func (*Candidate_Info) Descriptor() ([]byte, []int) {
	return file_proto_signaling_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Candidate_Info) GetSdpMLineIndex() int32 {
	if x != nil {
		return x.SdpMLineIndex
	}
	return 0
}

func (x *Candidate_Info) GetSdpMid() string {
	if x != nil {
		return x.SdpMid
	}
	return ""
}

func (x *Candidate_Info) GetCanidate() string {
	if x != nil {
		return x.Canidate
	}
	return ""
}

var File_proto_signaling_proto protoreflect.FileDescriptor

var file_proto_signaling_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b,
	0x0a, 0x03, 0x53, 0x64, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x64, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x04, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x22, 0xa2, 0x01, 0x0a, 0x08, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x64, 0x70, 0x52, 0x03, 0x73,
	0x64, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x7f, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x64, 0x70, 0x52, 0x03,
	0x73, 0x64, 0x70, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0xd1, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x64, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a,
	0x10, 0x73, 0x64, 0x70, 0x5f, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x64, 0x70, 0x4d, 0x4c, 0x69, 0x6e,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x64, 0x70, 0x5f, 0x6d, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x64, 0x70, 0x4d, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x05, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xdf, 0x01, 0x0a, 0x06, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x22, 0x83, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x0b, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x01, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x32, 0x0a, 0x05, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x41, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49,
	0x4f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x58, 0x45, 0x44, 0x10, 0x03, 0x32, 0x5e,
	0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x04, 0x57,
	0x61, 0x69, 0x74, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x22, 0x00, 0x30, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x1a, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_signaling_proto_rawDescOnce sync.Once
	file_proto_signaling_proto_rawDescData = file_proto_signaling_proto_rawDesc
)

func file_proto_signaling_proto_rawDescGZIP() []byte {
	file_proto_signaling_proto_rawDescOnce.Do(func() {
		file_proto_signaling_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_signaling_proto_rawDescData)
	})
	return file_proto_signaling_proto_rawDescData
}

var file_proto_signaling_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_signaling_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_signaling_proto_goTypes = []interface{}{
	(Media)(0),             // 0: proto.Media
	(Error_ErrorStatus)(0), // 1: proto.Error.ErrorStatus
	(*Sdp)(nil),            // 2: proto.Sdp
	(*Meta)(nil),           // 3: proto.Meta
	(*Greeting)(nil),       // 4: proto.Greeting
	(*Offer)(nil),          // 5: proto.Offer
	(*Answer)(nil),         // 6: proto.Answer
	(*Candidate)(nil),      // 7: proto.Candidate
	(*Leave)(nil),          // 8: proto.Leave
	(*Signal)(nil),         // 9: proto.Signal
	(*Error)(nil),          // 10: proto.Error
	(*Empty)(nil),          // 11: proto.Empty
	nil,                    // 12: proto.Greeting.DetailsEntry
	(*Candidate_Info)(nil), // 13: proto.Candidate.Info
}
var file_proto_signaling_proto_depIdxs = []int32{
	12, // 0: proto.Greeting.details:type_name -> proto.Greeting.DetailsEntry
	3,  // 1: proto.Offer.meta:type_name -> proto.Meta
	2,  // 2: proto.Offer.sdp:type_name -> proto.Sdp
	0,  // 3: proto.Offer.media:type_name -> proto.Media
	3,  // 4: proto.Answer.meta:type_name -> proto.Meta
	2,  // 5: proto.Answer.sdp:type_name -> proto.Sdp
	0,  // 6: proto.Answer.media:type_name -> proto.Media
	3,  // 7: proto.Candidate.meta:type_name -> proto.Meta
	13, // 8: proto.Candidate.info:type_name -> proto.Candidate.Info
	3,  // 9: proto.Leave.meta:type_name -> proto.Meta
	5,  // 10: proto.Signal.offer:type_name -> proto.Offer
	6,  // 11: proto.Signal.answer:type_name -> proto.Answer
	8,  // 12: proto.Signal.leave:type_name -> proto.Leave
	7,  // 13: proto.Signal.candidate:type_name -> proto.Candidate
	10, // 14: proto.Signal.error:type_name -> proto.Error
	1,  // 15: proto.Error.status:type_name -> proto.Error.ErrorStatus
	4,  // 16: proto.Signaling.Wait:input_type -> proto.Greeting
	9,  // 17: proto.Signaling.Send:input_type -> proto.Signal
	9,  // 18: proto.Signaling.Wait:output_type -> proto.Signal
	11, // 19: proto.Signaling.Send:output_type -> proto.Empty
	18, // [18:20] is the sub-list for method output_type
	16, // [16:18] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_signaling_proto_init() }
func file_proto_signaling_proto_init() {
	if File_proto_signaling_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_signaling_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sdp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Greeting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_signaling_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candidate_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_signaling_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Signal_Offer)(nil),
		(*Signal_Answer)(nil),
		(*Signal_Leave)(nil),
		(*Signal_Candidate)(nil),
		(*Signal_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_signaling_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_signaling_proto_goTypes,
		DependencyIndexes: file_proto_signaling_proto_depIdxs,
		EnumInfos:         file_proto_signaling_proto_enumTypes,
		MessageInfos:      file_proto_signaling_proto_msgTypes,
	}.Build()
	File_proto_signaling_proto = out.File
	file_proto_signaling_proto_rawDesc = nil
	file_proto_signaling_proto_goTypes = nil
	file_proto_signaling_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SignalingClient is the client API for Signaling service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignalingClient interface {
	// Wait is the rpc that pushes signaling information to a connected peer.
	Wait(ctx context.Context, in *Greeting, opts ...grpc.CallOption) (Signaling_WaitClient, error)
	// Send is sending individual signaling information to connected peers.
	Send(ctx context.Context, in *Signal, opts ...grpc.CallOption) (*Empty, error)
}

type signalingClient struct {
	cc grpc.ClientConnInterface
}

func NewSignalingClient(cc grpc.ClientConnInterface) SignalingClient {
	return &signalingClient{cc}
}

func (c *signalingClient) Wait(ctx context.Context, in *Greeting, opts ...grpc.CallOption) (Signaling_WaitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Signaling_serviceDesc.Streams[0], "/proto.Signaling/Wait", opts...)
	if err != nil {
		return nil, err
	}
	x := &signalingWaitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Signaling_WaitClient interface {
	Recv() (*Signal, error)
	grpc.ClientStream
}

type signalingWaitClient struct {
	grpc.ClientStream
}

func (x *signalingWaitClient) Recv() (*Signal, error) {
	m := new(Signal)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *signalingClient) Send(ctx context.Context, in *Signal, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Signaling/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SignalingServer is the server API for Signaling service.
type SignalingServer interface {
	// Wait is the rpc that pushes signaling information to a connected peer.
	Wait(*Greeting, Signaling_WaitServer) error
	// Send is sending individual signaling information to connected peers.
	Send(context.Context, *Signal) (*Empty, error)
}

// UnimplementedSignalingServer can be embedded to have forward compatible implementations.
type UnimplementedSignalingServer struct {
}

func (*UnimplementedSignalingServer) Wait(*Greeting, Signaling_WaitServer) error {
	return status.Errorf(codes.Unimplemented, "method Wait not implemented")
}
func (*UnimplementedSignalingServer) Send(context.Context, *Signal) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterSignalingServer(s *grpc.Server, srv SignalingServer) {
	s.RegisterService(&_Signaling_serviceDesc, srv)
}

func _Signaling_Wait_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Greeting)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SignalingServer).Wait(m, &signalingWaitServer{stream})
}

type Signaling_WaitServer interface {
	Send(*Signal) error
	grpc.ServerStream
}

type signalingWaitServer struct {
	grpc.ServerStream
}

func (x *signalingWaitServer) Send(m *Signal) error {
	return x.ServerStream.SendMsg(m)
}

func _Signaling_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Signal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signaling/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServer).Send(ctx, req.(*Signal))
	}
	return interceptor(ctx, in, info, handler)
}

var _Signaling_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Signaling",
	HandlerType: (*SignalingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Signaling_Send_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Wait",
			Handler:       _Signaling_Wait_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/signaling.proto",
}
